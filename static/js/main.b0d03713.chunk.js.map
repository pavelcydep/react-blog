{"version":3,"sources":["components/Header.js","shared/posts.js","components/PostItem.js","images/close.svg","components/AddPostForm.js","components/Post.js","components/PostContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Typography","gutterBottom","variant","component","posts","id","title","description","liked","image","useStyles","makeStyles","root","width","height","PostItem","likePost","deletePost","console","log","heartStyles","classes","Card","sx","maxWidth","CardMedia","src","CardContent","color","CardActions","Button","size","onClick","style","fill","AddPostForm","state","handleTitleOnchange","e","setState","target","value","handleImageOnchange","handleDescriptionOnchange","createPost","post","props","blogArr","length","addNewPost","toggleBlogClose","this","class","close","alt","onSubmit","name","novalidate","type","minlength","maxlength","required","placeholder","onChange","Component","Post","showBlog","JSON","parse","localStorage","getItem","pos","temp","setItem","stringify","toggleBlog","splice","closeEscape","key","blogPost","push","window","addEventListener","removeEventListener","map","item","PostContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d03713.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction Header() {\r\n  return (\r\n      <header className=\"App-header\">\r\n      <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n         Цитаты от Гомера Симпсона\r\n          </Typography>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;","export const posts = [\r\n    {\r\n        id: 1,\r\n        title: \"Цитата о семье\",\r\n        description: \"«Нелегко разрываться между беременной женой и неуравновешенным ребенком, но свои восемь часов у телевизора я все-таки выкроил»\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330081947_2.jpg'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Цитата о правде\",\r\n        description: \"«Для вранья нужны двое. Один врет, другой слушает»\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330081968_3.jpg'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Цитата о жене\",\r\n        description: \"«Знаете, парни, вы можете смеяться, но мне гораздо приятнее чувствовать на шее сладкое дыхание спящей жены, чем запихивать долларовые купюры в стринги какой-то неизвестной дамочки».\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330082046_6.jpg'\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        title: \"Цитата о деньгах\",\r\n        description: \"«Дурак и деньги быстро расстаются. Я бы много заплатил тому, кто объяснил бы мне эту закономерность»\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330082037_11.jpg'\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Цитата о соседях\",\r\n        description: \"«Даже если вы берете что-то у соседа на время, все равно лучше делать это под покровом темноты»\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330082039_13.jpg'\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"Цитата о жизни\",\r\n        description: \"«Жизнь - это просто куча всякой фигни, которая происходит»\",\r\n        liked: false,\r\n        image: 'https://bugaga.ru/uploads/posts/2012-02/1330082091_15.jpg'\r\n    }\r\n\r\n\r\n]","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 250,\r\n        height: 130,\r\n    },\r\n});\r\n\r\nexport const PostItem = ({\r\n    title,\r\n    description,\r\n    likePost,\r\n    liked,\r\n    deletePost,\r\n    image }) => {\r\n\r\n    console.log(title)\r\n    const heartStyles = liked ? \"crimson\" : \"black\";\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Card sx={{ maxWidth: 250 }}>\r\n            <CardMedia>\r\n                <img className={classes.root} src={image} />\r\n            </CardMedia>\r\n\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {description}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\"> <FavoriteIcon onClick={likePost} style={{ fill: heartStyles }} /></Button>\r\n                <Button size=\"small\"> < DeleteIcon onClick={deletePost} /></Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/close.888d78eb.svg\";","import close from \"../images/close.svg\";\r\nimport React, { Component } from 'react';\r\nexport class AddPostForm extends Component{\r\n    state={\r\n        title:'',\r\n        description:'',\r\n        image:''\r\n    }\r\n    handleTitleOnchange=e=>{\r\n        this.setState({\r\n           title:e.target.value,\r\n        \r\n        })\r\n    }\r\n    handleImageOnchange=e=>{\r\n        this.setState({\r\n           image:e.target.value,\r\n        \r\n        })\r\n    }\r\n    handleDescriptionOnchange=e=>{\r\n        this.setState({\r\n           description:e.target.value\r\n        })\r\n    }\r\n    createPost=()=>{\r\n        const post={\r\n            id: this.props.blogArr.length+1,\r\n            title: this.state.title,\r\n            description:this.state.description ,\r\n            liked: false,\r\n            image: this.state.image   \r\n        }\r\n      \r\n        this.props.addNewPost(post);\r\n        this.props.toggleBlogClose();\r\n    }\r\n\r\n    render(){\r\n    const toggleBlogClose= this.props.toggleBlogClose;\r\n    \r\n\r\n\r\n    return(\r\n        \r\n          \r\n        <div className=\"popup\">\r\n       \r\n        \r\n        <div class=\"popup__content\">\r\n         \r\n         <img src={close}  onClick={toggleBlogClose} alt=\"\" class=\"popup__close\"/>\r\n            \r\n          <h3 class=\"popup__title\">Новое место</h3>\r\n          <form class=\"popup__form\"\r\n          onSubmit={this.createPost}\r\n           name=\"new\" novalidate>\r\n           \r\n            <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"title\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n            maxlength=\"30\"\r\n             required placeholder=\"Название поста\"\r\n             value={this.state.title}\r\n             onChange={this.handleTitleOnchange}\r\n             />\r\n             \r\n             \r\n             <input\r\n             type=\"text\"\r\n              id=\"name-card\"\r\n              name=\"image\"\r\n             class=\"popup__input popup__input_type_name\"\r\n              minlength=\"2\"\r\n          \r\n             required placeholder=\"Ссылка на картинку\"\r\n             value={this.state.image}\r\n             onChange={this.handleImageOnchange}\r\n             />\r\n            <span id=\"name-card-error\" class=\"error\"></span>\r\n          \r\n            <textarea\r\n             type=\"text\"\r\n              id=\"description\"\r\n               name=\"description\"\r\n                class=\"popup__input popup__input_type_link-url\" \r\n                minlength=\"2\"\r\n                 required \r\n                 placeholder=\"Текст поста\"\r\n                 value={this.state.description}\r\n                 onChange={this.handleDescriptionOnchange}\r\n                 \r\n                 />\r\n          \r\n            <span id=\"link-error\" class=\"error\"></span>\r\n            <button type=\"submit\" class=\"button popup__button  popup__button_valid\"  >+</button>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n    );\r\n}\r\n}","import React, { Component } from 'react';\r\nimport { posts } from \"../shared/posts\";\r\nimport { amounghtPost } from \"../shared/utils\";\r\nimport { PostItem } from './PostItem';\r\nimport { AddPostForm } from './AddPostForm';\r\nimport '../components/PlaceList.css';\r\nexport class Post extends Component {\r\n\r\n    state = {\r\n        showBlog: false,\r\n        //беру из local\r\n        blogArr: JSON.parse(localStorage.getItem('blogPost')) || posts\r\n    }\r\n    likePost = pos => {\r\n        const temp = [...this.state.blogArr];\r\n        //в liked меняю true на false\r\n        temp[pos].liked = !temp[pos].liked\r\n        this.setState({ blogArr: temp })\r\n        //сохраняю массив в local\r\n        localStorage.setItem('blogPost', JSON.stringify(temp))\r\n    }\r\n    toggleBlog = () => {\r\n        this.setState({\r\n            showBlog: true\r\n        })\r\n    }\r\n    toggleBlogClose = () => {\r\n        this.setState({\r\n            showBlog: false\r\n        })\r\n    }\r\n    deletePost = pos => {\r\n        const temp = [...this.state.blogArr];\r\n        temp.splice(pos, 1);\r\n        this.setState({ blogArr: temp })\r\n        localStorage.setItem('blogPost', JSON.stringify(temp))\r\n    }\r\n    closeEscape = (e) => {\r\n        if (e.key === \"Escape\" && this.state.showBlog) {\r\n            this.toggleBlogClose()\r\n        }\r\n    }\r\n    addNewPost=(blogPost)=>{\r\n        const temp = [...this.state.blogArr]; \r\n        temp.push(blogPost);\r\n        this.setState({\r\n            blogArr: temp\r\n        })\r\n        localStorage.setItem('blogPost', JSON.stringify(temp))\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keyup', this.closeEscape);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keyup', this.closeEscape);\r\n    }\r\n\r\n    render() {\r\n        const blogPost = this.state.blogArr.map((item, pos) => {\r\n            return (\r\n                <PostItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    description={item.description}\r\n                    liked={item.liked}\r\n                    likePost={() => this.likePost(pos)}\r\n                    deletePost={() => this.deletePost(pos)}\r\n                    image={item.image}\r\n\r\n                />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <button className=\"btn   \" onClick={this.toggleBlog}>Создать пост</button>\r\n                {\r\n                    this.state.showBlog ?\r\n                        <>\r\n                            <AddPostForm\r\n                            blogArr={this.state.blogArr}\r\n                            toggleBlogClose={this.toggleBlogClose}\r\n                            addNewPost={this.addNewPost} />\r\n                        </> : null}\r\n\r\n                <>\r\n                    <div className=\"places-list\">\r\n\r\n                        {blogPost}\r\n                    </div>\r\n                </>\r\n            </>\r\n        );\r\n\r\n    }\r\n}","import React from 'react';\r\nimport {Post} from './Post';\r\n\r\nfunction PostContainer() {\r\n  return (\r\n   <>\r\n      <div className=\"container\">\r\n      <Post/>\r\n    </div>   \r\n     </>\r\n  );\r\n}\r\n\r\nexport default  PostContainer;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport  PostContainer from './components/PostContainer';\r\nfunction App() {\r\n  return (\r\n   <>\r\n         <Header />\r\n         <PostContainer />\r\n     </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}